package mum.mpp.atm.controller;import mum.mpp.atm.core.ATM;import mum.mpp.atm.core.Session;import mum.mpp.atm.model.AccountInformation;import mum.mpp.atm.model.Card;import mum.mpp.atm.model.CustomerConsole;import mum.mpp.atm.model.Message;import mum.mpp.atm.model.Money;import mum.mpp.atm.model.Receipt;public class DepositTransaction extends Transaction {	private int to;	private Money amount;		public DepositTransaction(ATM atm, Session session, Card card, int pin) {		super(atm, session, card, pin);	}	protected Message getCustomerInputs() throws CustomerConsole.Cancelled {		to = atm.getCustomerConsole().readMenuChoice("Account to deposit to", AccountInformation.ACCOUNT_NAMES);		amount = atm.getCustomerConsole().readAmount("Amount to deposit");		return new Message(Message.INITIATE_DEPOSIT, card, pin, transactionId, -1, to, amount);	}	protected Receipt completeTransaction() throws CustomerConsole.Cancelled {		atm.getDepositEnvelopAcceptor().acceptEnvelope();		atm.getNetworkToBank()				.sendMessage(new Message(Message.COMPLETE_DEPOSIT, card, pin, transactionId, -1, to, amount), balance);		return new Receipt(this.atm, this.card, this, this.balance) {			{				detailsPortion = new String[2];				detailsPortion[0] = "DEPOSIT TO: " + AccountInformation.ACCOUNT_ABBREVIATIONS[to];				detailsPortion[1] = "AMOUNT: " + amount.toString();			}		};	}}