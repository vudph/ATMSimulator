package mum.mpp.atm.controller;import mum.mpp.atm.core.ATM;import mum.mpp.atm.core.Session;import mum.mpp.atm.model.AccountInformation;import mum.mpp.atm.model.Card;import mum.mpp.atm.model.CustomerConsole;import mum.mpp.atm.model.Message;import mum.mpp.atm.model.Money;import mum.mpp.atm.model.Receipt;public class TransferTransaction extends Transaction {	private int from;	private int to;	private Money amount;		public TransferTransaction(ATM atm, Session session, Card card, int pin) {		super(atm, session, card, pin);	}	protected Message getCustomerInputs() throws CustomerConsole.Cancelled {		from = atm.getCustomerConsole().readMenuChoice("Account to transfer from", AccountInformation.ACCOUNT_NAMES);		to = atm.getCustomerConsole().readMenuChoice("Account to transfer to", AccountInformation.ACCOUNT_NAMES);		amount = atm.getCustomerConsole().readAmount("Amount to transfer");		return new Message(Message.TRANSFER, card, pin, transactionId, from, to, amount);	}	protected Receipt completeTransaction() {		return new Receipt(this.atm, this.card, this, this.balance) {			{				detailsPortion = new String[2];				detailsPortion[0] = "TRANSFER FROM: " + AccountInformation.ACCOUNT_ABBREVIATIONS[from] + " TO: "						+ AccountInformation.ACCOUNT_ABBREVIATIONS[to];				detailsPortion[1] = "AMOUNT: " + amount.toString();			}		};	}}