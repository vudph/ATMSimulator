package mum.mpp.atm.view;import java.awt.CardLayout;import java.awt.Color;import java.awt.GridBagConstraints;import java.awt.Insets;import java.awt.Panel;import mum.mpp.atm.model.Card;import mum.mpp.atm.model.Money;class GUI extends Panel {	/**	 * 	 */	private static final long serialVersionUID = 1L;	private CardLayout mainLayout;	private ATMPanel atmPanel;	private CardPanel cardPanel;		GUI(SimCardReader cardReader, SimDisplay display, SimKeyboard keyboard, SimCashDispenser cashDispenser,			SimDepositEnvelopAcceptor envelopeAcceptor, SimReceiptPrinter receiptPrinter) {		setBackground(Color.lightGray);		mainLayout = new CardLayout(3, 3);		setLayout(mainLayout);		atmPanel = new ATMPanel(this, cardReader, display, keyboard, cashDispenser, envelopeAcceptor, receiptPrinter);		this.add(atmPanel, "ATM");		cardPanel = new CardPanel();		add(cardPanel, "CARD");		mainLayout.show(this, "ATM");	}	public Money getInitialCash() {		mainLayout.show(this, "BILLS");		int numberOfBills = 500; // TO-DO hardcoding the number of 20$ paper in dispenser		mainLayout.show(this, "ATM");		return new Money(20 * numberOfBills);	}	public Card readCard() {		mainLayout.show(this, "CARD");		int cardNumber = cardPanel.readCardNumber();		mainLayout.show(this, "ATM");		if (cardNumber > 0)			return new Card(cardNumber);		else			return null;	}	void showCard(String cardName) {		mainLayout.show(this, cardName);	}	static GridBagConstraints makeConstraints(int row, int col, int width, int height, int fill) {		GridBagConstraints g = new GridBagConstraints();		g.gridy = row;		g.gridx = col;		g.gridheight = height;		g.gridwidth = width;		g.fill = fill;		g.insets = new Insets(2, 2, 2, 2);		g.weightx = 1;		g.weighty = 1;		g.anchor = GridBagConstraints.CENTER;		return g;	}}