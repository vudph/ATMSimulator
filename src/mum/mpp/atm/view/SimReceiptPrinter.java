package mum.mpp.atm.view;import java.awt.Button;import java.awt.Color;import java.awt.Font;import java.awt.GridBagConstraints;import java.awt.GridBagLayout;import java.awt.GridLayout;import java.awt.Panel;import java.awt.TextArea;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;class SimReceiptPrinter extends Panel {	/**	 * 	 */	private static final long serialVersionUID = 1L;	private TextArea printArea;	private Button take;			    	SimReceiptPrinter() {		GridBagLayout mainLayout = new GridBagLayout();		setLayout(mainLayout);		// Give user a button to click to take receipt - only visible when a		// receipt has been printed. We put the button in a panel with a		// GridLayout to ensure it gets space, even when invisible		Panel buttonPanel = new Panel();		buttonPanel.setLayout(new GridLayout(1, 1));		take = new Button("Take receipt");		buttonPanel.add(take);		add(buttonPanel);		take.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent e) {				printArea.setText("");				take.setEnabled(false);			}		});		take.setEnabled(false);		mainLayout.setConstraints(buttonPanel, GUI.makeConstraints(0, 0, 1, 1, GridBagConstraints.NONE));				// The actual area where receipt prints		printArea = new TextArea("", ATMPanel.PRINTABLE_LINES, ATMPanel.PRINTABLE_CHARS, TextArea.SCROLLBARS_VERTICAL_ONLY);		printArea.setBackground(Color.white);		printArea.setForeground(Color.black);		printArea.setFont(new Font("Monospaced", Font.PLAIN, 12));		printArea.setEditable(false);		add(printArea);		mainLayout.setConstraints(printArea, GUI.makeConstraints(1, 0, 1, 3, GridBagConstraints.NONE));	}	void println(String text) {		printArea.append(text + '\n');		try {			Thread.sleep(200);		} catch (InterruptedException e) {		}		take.setEnabled(true);	}}